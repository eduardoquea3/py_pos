=================================================================
GUÍA DE USO - SISTEMA MULTITENANT POS
=================================================================

COMANDOS BÁSICOS
-----------------------------------------------------------------

1. Aplicar migraciones a la base de datos:
   uv run alembic upgrade head

2. Iniciar servidor de desarrollo:
   uv run fastapi dev src/main.py

3. Iniciar servidor de producción:
   uv run fastapi run src/main.py

4. Crear nueva migración:
   uv run alembic revision --autogenerate -m "Descripción del cambio"

5. Ver historial de migraciones:
   uv run alembic history

6. Revertir última migración:
   uv run alembic downgrade -1


EJEMPLOS DE API - CURL
=================================================================

GESTIÓN DE TENANTS (EMPRESAS)
-----------------------------------------------------------------

1. Crear un nuevo tenant (empresa):
   curl -X POST http://localhost:8000/tenants/ \
     -H "Content-Type: application/json" \
     -d '{"name":"Mi Empresa","subdomain":"miempresa"}'

2. Listar todos los tenants:
   curl -X GET http://localhost:8000/tenants/

3. Obtener tenant por subdominio:
   curl -X GET http://localhost:8000/tenants/subdomain/miempresa

4. Obtener tenant por ID:
   curl -X GET http://localhost:8000/tenants/{tenant_id}

5. Actualizar tenant:
   curl -X PATCH http://localhost:8000/tenants/{tenant_id} \
     -H "Content-Type: application/json" \
     -d '{"name":"Nuevo Nombre","status":"active"}'

6. Suspender tenant:
   curl -X DELETE http://localhost:8000/tenants/{tenant_id}


AUTENTICACIÓN
-----------------------------------------------------------------

1. Registrar nuevo usuario:
   curl -X POST http://localhost:8000/auth/register \
     -H "Content-Type: application/json" \
     -d '{
       "email":"usuario@ejemplo.com",
       "password":"password123",
       "full_name":"Juan Pérez"
     }'

2. Registrar usuario asociado a un tenant:
   curl -X POST http://localhost:8000/auth/register \
     -H "Content-Type: application/json" \
     -d '{
       "email":"admin@miempresa.com",
       "password":"password123",
       "full_name":"Admin Empresa",
       "tenant_id":"tenant-uuid-aqui"
     }'

3. Login (obtener tokens JWT):
   curl -X POST http://localhost:8000/auth/login \
     -H "Content-Type: application/json" \
     -d '{
       "email":"usuario@ejemplo.com",
       "password":"password123"
     }'

   Respuesta:
   {
     "access_token": "eyJ0eXAiOiJKV1QiLCJhbGc...",
     "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGc...",
     "token_type": "bearer",
     "user": {
       "id": "uuid",
       "email": "usuario@ejemplo.com",
       "full_name": "Juan Pérez",
       "role": "user",
       "is_active": true,
       "tenant_id": null,
       "created_at": "2025-10-14T21:00:00"
     }
   }

4. Obtener información del usuario actual:
   curl -X GET http://localhost:8000/auth/me \
     -H "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."

5. Renovar token de acceso:
   curl -X POST http://localhost:8000/auth/refresh \
     -H "Content-Type: application/json" \
     -d '{
       "refresh_token":"eyJ0eXAiOiJKV1QiLCJhbGc..."
     }'

6. Cambiar contraseña:
   curl -X POST http://localhost:8000/auth/change-password \
     -H "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGc..." \
     -H "Content-Type: application/json" \
     -d '{
       "current_password":"password123",
       "new_password":"newpassword456"
     }'


FLUJO COMPLETO DE EJEMPLO
=================================================================

1. Crear una empresa:
   curl -X POST http://localhost:8000/tenants/ \
     -H "Content-Type: application/json" \
     -d '{"name":"GasoLinera Norte","subdomain":"gasnorte"}'

   Respuesta: Guarda el "id" del tenant

2. Registrar usuario administrador de la empresa:
   curl -X POST http://localhost:8000/auth/register \
     -H "Content-Type: application/json" \
     -d '{
       "email":"admin@gasnorte.com",
       "password":"Admin123!",
       "full_name":"Carlos Administrador",
       "tenant_id":"<id-del-tenant-del-paso-1>"
     }'

3. Login del administrador:
   curl -X POST http://localhost:8000/auth/login \
     -H "Content-Type: application/json" \
     -d '{
       "email":"admin@gasnorte.com",
       "password":"Admin123!"
     }'

   Respuesta: Guarda el "access_token"

4. Verificar sesión:
   curl -X GET http://localhost:8000/auth/me \
     -H "Authorization: Bearer <access_token>"

5. Acceder a recursos del tenant vía subdominio:
   curl -X GET http://gasnorte.localhost:8000/productos \
     -H "Authorization: Bearer <access_token>"

   Nota: El sistema detecta automáticamente "gasnorte" del subdominio
   y conecta a la base de datos de ese tenant.


NOTAS IMPORTANTES
=================================================================

- Los access_token expiran en 1 día
- Los refresh_token expiran en 7 días
- Cada tenant tiene su propia base de datos aislada
- El subdominio determina a qué base de datos conectarse
- Para desarrollo local usa: {subdomain}.localhost:8000
- Para producción configura DNS wildcard: *.tudominio.com

DOCUMENTACIÓN API INTERACTIVA
-----------------------------------------------------------------

Una vez iniciado el servidor, accede a:
http://localhost:8000/docs

Allí puedes probar todos los endpoints de forma interactiva.
